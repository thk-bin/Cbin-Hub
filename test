--thongbao
local Notification = require(game:GetService("ReplicatedStorage").Notification)
Notification.new("<Color=Green> CBin Hub  <Color=/>"):Display()
wait(2)
Notification.new("<Color=Yellow> start up game...<Color=/>"):Display()
wait(3)
Notification.new("<Color=Yellow>Start The Blade Ball Script Auto Auto Parry[Legit]!<Color=/>"):Display()
wait(2)
Notification.new("<Color=Purple> Join Discord Me! <Color=/>"):Display()
wait(0.5)
Notification.new("<Color=Purple> CBin Hub | COMMUNITY <Color=/>"):Display()
wait(1)
Notification.new("<Color=Yellow> START The Script! <Color=/>"):Display()
wait(1)
if game.PlaceId == 13772394625 then
	---Source Tween bên Night Hub tui Copy vô-----
function GetDistance(target)
return math.floor((target.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude)
end

function BTP(P)
repeat wait(1)
game.Players.LocalPlayer.Character.Humanoid:ChangeState(15)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = P
task.wait()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = P
until (P.Position-game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 1500
end

function TelePPlayer(P)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = P
end

function TP(Pos)
Distance = (Pos.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
if Distance < 25 then
Speed = 5000
elseif Distance < 250 then
Speed = 350
elseif Distance < 500 then
Speed = 350
elseif Distance < 1000 then
Speed = 350
elseif Distance < 2000 then
Speed = 350
elseif Distance < 4000 then
Speed = 350
elseif Distance >= 5000 then
Speed = 350
end
game:GetService("TweenService"):Create(
game.Players.LocalPlayer.Character.HumanoidRootPart,
TweenInfo.new(Distance/Speed, Enum.EasingStyle.Linear),
{CFrame = Pos}
):Play()
end

function TP1(Pos)
Distance = (Pos.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
if Distance < 25 then
	Speed = 5000
elseif Distance < 50 then
	Speed = 2000
elseif Distance < 150 then
	Speed = 350
elseif Distance < 250 then
	Speed = 350
elseif Distance < 500 then
	Speed = 350
elseif Distance < 750 then
	Speed = 350
elseif Distance >= 1000 then
	Speed = 350
end
game:GetService("TweenService"):Create(
	game:GetService("Players").LocalPlayer.Character.HumanoidRootPart,
	TweenInfo.new(Distance/Speed, Enum.EasingStyle.Linear),
	{CFrame = Pos}
):Play()
end

function topos(Pos)
Distance = (Pos.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
if Distance < 25 then
	Speed = 5000
elseif Distance < 50 then
	Speed = 2000
elseif Distance < 150 then
	Speed = 800
elseif Distance < 250 then
	Speed = 350
elseif Distance < 500 then
	Speed = 350
elseif Distance < 750 then
	Speed = 350
elseif Distance >= 1000 then
	Speed = 350
end
game:GetService("TweenService"):Create(
	game:GetService("Players").LocalPlayer.Character.HumanoidRootPart,
	TweenInfo.new(Distance/Speed, Enum.EasingStyle.Linear),
	{CFrame = Pos}
):Play()
end

function TPB(CFgo)
local tween_s = game:service"TweenService"
local info = TweenInfo.new((game:GetService("Workspace").Boats.MarineBrigade.VehicleSeat.CFrame.Position - CFgo.Position).Magnitude/300, Enum.EasingStyle.Linear)
tween = tween_s:Create(game:GetService("Workspace").Boats.MarineBrigade.VehicleSeat, info, {CFrame = CFgo})
tween:Play()

local tweenfunc = {}

function tweenfunc:Stop()
tween:Cancel()
end

return tweenfunc
end

function TPP(CFgo)
if game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health <= 0 or not game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid") then tween:Cancel() repeat wait() until game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid") and game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid").Health > 0 wait(7) return end
local tween_s = game:service"TweenService"
local info = TweenInfo.new((game:GetService("Players")["LocalPlayer"].Character.HumanoidRootPart.Position - CFgo.Position).Magnitude/325, Enum.EasingStyle.Linear)
tween = tween_s:Create(game.Players.LocalPlayer.Character["HumanoidRootPart"], info, {CFrame = CFgo})
tween:Play()

local tweenfunc = {}

function tweenfunc:Stop()
tween:Cancel()
end

return tweenfunc
end

getgenv().ToTargets = function(p)
task.spawn(function()
pcall(function()
	if game:GetService("Players").LocalPlayer:DistanceFromCharacter(p.Position) <= 250 then 
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = p
	elseif not game.Players.LocalPlayer.Character:FindFirstChild("Root")then 
		local K = Instance.new("Part",game.Players.LocalPlayer.Character)
		K.Size = Vector3.new(1,0.5,1)
		K.Name = "Root"
		K.Anchored = true
		K.Transparency = 1
		K.CanCollide = false
		K.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,20,0)
	end
	local U = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position-p.Position).Magnitude
	local z = game:service("TweenService")
	local B = TweenInfo.new((p.Position-game.Players.LocalPlayer.Character.Root.Position).Magnitude/300,Enum.EasingStyle.Linear)
	local S,g = pcall(function()
	local q = z:Create(game.Players.LocalPlayer.Character.Root,B,{CFrame = p})
	q:Play()
end)
if not S then 
	return g
end
game.Players.LocalPlayer.Character.Root.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
	if S and game.Players.LocalPlayer.Character:FindFirstChild("Root") then 
		pcall(function()
			if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position-p.Position).Magnitude >= 20 then 
				spawn(function()
					pcall(function()
						if (game.Players.LocalPlayer.Character.Root.Position-game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 150 then 
							game.Players.LocalPlayer.Character.Root.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
						else 
							game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame=game.Players.LocalPlayer.Character.Root.CFrame
						end
					end)
				end)
			elseif (game.Players.LocalPlayer.Character.HumanoidRootPart.Position-p.Position).Magnitude >= 10 and(game.Players.LocalPlayer.Character.HumanoidRootPart.Position-p.Position).Magnitude < 20 then 
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = p
			elseif (game.Players.LocalPlayer.Character.HumanoidRootPart.Position-p.Position).Magnitude < 10 then 
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = p
			end
		end)
	end
end)
end)
end

Type = 1
spawn(function()
while wait(.1) do
if Type == 1 then
	Pos = CFrame.new(0,PosY,0)
elseif Type == 2 then
	Pos = CFrame.new(0,PosY,-30)
elseif Type == 3 then
	Pos = CFrame.new(30,PosY,0)
elseif Type == 4 then
	Pos = CFrame.new(0,PosY,30)	
elseif Type == 5 then
	Pos = CFrame.new(-30,PosY,0)
elseif Type == 6 then
	Pos = CFrame.new(0,35,0)
end
end
end)

spawn(function()
while wait(.1) do
Type = 1
wait(0.5)
Type = 2
wait(0.5)
Type = 3
wait(0.5)
Type = 4
wait(0.5)
Type = 5
wait(0.5)
end
end)

task.spawn(function()
while task.wait() do
	pcall(function()
		if _G.AutoFarmNearest and AutoFarmNearestMagnet or SelectMag and _G.BringMonster then
			for i,v in pairs(game.Workspace.Enemies:GetChildren()) do
				if not string.find(v.Name,"Boss") and (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= _G.BringMode then
					if InMyNetWork(v.HumanoidRootPart) then
						v.HumanoidRootPart.CFrame = PosMon
						v.Humanoid.JumpPower = 0
						v.Humanoid.WalkSpeed = 0
						v.HumanoidRootPart.Size = Vector3.new(60,60,60)
						v.HumanoidRootPart.Transparency = 1
						v.HumanoidRootPart.CanCollide = false
						v.Head.CanCollide = false
						if v.Humanoid:FindFirstChild("Animator") then
							v.Humanoid.Animator:Destroy()
						end
						v.Humanoid:ChangeState(11)
						v.Humanoid:ChangeState(14)
					end
				end
			end
		end
	end)
end
end)

spawn(function()
game:GetService("RunService").Heartbeat:Connect(function()
if _G.AutoAdvanceDungeon or _G.AutoDoughtBoss or _G.Auto_DungeonMobAura or _G.AutoFarmChest or _G.AutoFactory or _G.AutoFarmBossHallow or _G.AutoFarmSwanGlasses or _G.AutoLongSword or _G.AutoBlackSpikeycoat or _G.AutoElectricClaw or _G.AutoFarmGunMastery or _G.AutoHolyTorch or _G.AutoLawRaid or _G.AutoFarmBoss or _G.AutoTwinHooks or _G.AutoOpenSwanDoor or _G.AutoDragon_Trident or _G.AutoSaber or _G.NOCLIP or _G.AutoFarmFruitMastery or _G.AutoFarmGunMastery or _G.TeleportIsland or _G.Auto_EvoRace or _G.AutoFarmAllMsBypassType or _G.AutoObservationv2 or _G.AutoMusketeerHat or _G.AutoEctoplasm or _G.AutoRengoku or _G.Auto_Rainbow_Haki or _G.AutoObservation or _G.AutoDarkDagger or _G.Safe_Mode or _G.MasteryFruit or _G.AutoBudySword or _G.AutoOderSword or _G.AutoBounty or _G.AutoAllBoss or _G.Auto_Bounty or _G.AutoSharkman or _G.Auto_Mastery_Fruit or _G.Auto_Mastery_Gun or _G.Auto_Dungeon or _G.Auto_Cavender or _G.Auto_Pole or _G.Auto_Kill_Ply or _G.Auto_Factory or _G.AutoSecondSea or _G.TeleportPly or _G.AutoBartilo or _G.Auto_DarkBoss or _G.GrabChest or _G.AutoFarmBounty or _G.Holy_Torch or _G.AutoFarm or _G.Clip or _G.AutoElitehunter or _G.AutoThirdSea or _G.Auto_Bone or _G.Autoheart or _G.Autodoughking or _G.AutoFarmMaterial or _G.AutoNevaSoulGuitar or _G.Auto_Dragon_Trident or _G.Autotushita or _G.d or _G.Autowaden or _G.Autogay or _G.Autopole or _G.Autosaw or _G.AutoObservationHakiV2 or _G.AutoFarmNearest or AutoFarmChest or _G.AutoCarvender or _G.AutoTwinHook or AutoMobAura or _G.Tweenfruit or _G.AutoKai or _G.TeleportNPC or _G.Leather or _G.Auto_Wing or _G.Umm or _G.Makori_gay or Radioactive or Fish or Gunpowder or Dragon_Scale or Cocoafarm or Scrap or MiniHee or _G.AutoFarmSeabaest or Auto_Cursed_Dual_Katana or _G.AutoFarmMob or _G.AutoMysticIsland or _G.AutoFarmDungeon or _G.AutoRaidPirate or _G.AutoQuestRace or _G.TweenMGear or getgenv().AutoFarm or _G.AutoPlayerHunter or _G.AutoFactory or Grab_Chest or _G.Namfon or _G.AutoSwordMastery or _G.AutoSeaBest or _G.AutoKillTial or _G.Auto_Saber or _G.Position_Spawn or _G.Farmfast or _G.AutoRace or _G.RaidPirate then
	if not game:GetService("Workspace"):FindFirstChild("LOL") then
		local LOL = Instance.new("Part")
		LOL.Name = "LOL"
		LOL.Parent = game.Workspace
		LOL.Anchored = true
		LOL.Transparency = 1
		LOL.Size = Vector3.new(30,-0.5,30)
	elseif game:GetService("Workspace"):FindFirstChild("LOL") then
		game.Workspace["LOL"].CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, -3.6, 0)
	end
else
	if game:GetService("Workspace"):FindFirstChild("LOL") then
		game:GetService("Workspace"):FindFirstChild("LOL"):Destroy()
	end
end
end)
end)

spawn(function()
pcall(function()
	while wait() do
		if _G.TeleportBall == true then
			if not game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyClip") then
				local Noclip = Instance.new("BodyVelocity")
				Noclip.Name = "BodyClip"
				Noclip.Parent = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
				Noclip.MaxForce = Vector3.new(100000,100000,100000)
				Noclip.Velocity = Vector3.new(0,0,0)
			end
		end
	end
end)
end)

spawn(function()
pcall(function()
	game:GetService("RunService").Stepped:Connect(function()
		if _G.TeleportBall == true then
			for _, v in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
				if v:IsA("BasePart") then
					v.CanCollide = false    
				end
			end
		end
	end)
end)
end)

function InstancePos(pos)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
end

function TP3(pos)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
end

spawn(function()
while wait() do
	if _G.TeleportBall == true then
		pcall(function()
			game:GetService("ReplicatedStorage").Remotes.CommE:FireServer("Ken",true)
		end)
	end    
end
end)

spawn(function()
game:GetService("RunService").RenderStepped:Connect(function()
if _G.AutoClick or Fastattack then
	 pcall(function()
		game:GetService'VirtualUser':CaptureController()
		game:GetService'VirtualUser':Button1Down(Vector2.new(0,1,0,1))
	end)
end
end)
end)

function StopTween(target)
if not target then
	_G.StopTween = true
	wait()
	topos(game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame)
	wait()
	if game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyClip") then
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyClip"):Destroy()
	end
	_G.StopTween = false
	_G.Clip = false
end
end

spawn(function()
pcall(function()
	while wait() do
		for i,v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do  
			if v:IsA("Tool") then
				if v:FindFirstChild("RemoteFunctionShoot") then 
					SelectWeaponGun = v.Name
				end
			end
		end
	end
end)
end)

game:GetService("Players").LocalPlayer.Idled:connect(function()
game:GetService("VirtualUser"):Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
wait(1)
game:GetService("VirtualUser"):Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)

function isnil(thing)
	return (thing == nil)
end
local function round(n)
	return math.floor(tonumber(n) + 0.5)
end
Number = math.random(1, 1000000)
function UpdatePlayerChams()
	for i,v in pairs(game:GetService'Players':GetChildren()) do
		pcall(function()
			if not isnil(v.Character) then
				if ESPPlayer then
					if not isnil(v.Character.Head) and not v.Character.Head:FindFirstChild('NameEsp'..Number) then
						local bill = Instance.new('BillboardGui',v.Character.Head)
						bill.Name = 'NameEsp'..Number
						bill.ExtentsOffset = Vector3.new(0, 1, 0)
						bill.Size = UDim2.new(1,200,1,30)
						bill.Adornee = v.Character.Head
						bill.AlwaysOnTop = true
						local name = Instance.new('TextLabel',bill)
						name.Font = Enum.Font.GothamSemibold
						name.FontSize = "Size14"
						name.TextWrapped = true
						name.Text = (v.Name ..' \n'.. round((game:GetService('Players').LocalPlayer.Character.Head.Position - v.Character.Head.Position).Magnitude/3) ..' Distance')
						name.Size = UDim2.new(1,0,1,0)
						name.TextYAlignment = 'Top'
						name.BackgroundTransparency = 1
						name.TextStrokeTransparency = 0.5
						if v.Team == game.Players.LocalPlayer.Team then
							name.TextColor3 = Color3.new(0, 0, 0)
						else
							name.TextColor3 = Color3.new(0, 0, 0)
						end
					else
						v.Character.Head['NameEsp'..Number].TextLabel.Text = (v.Name ..' | '.. round((game:GetService('Players').LocalPlayer.Character.Head.Position - v.Character.Head.Position).Magnitude/3) ..' Distance\nHealth : ' .. round(v.Character.Humanoid.Health*100/v.Character.Humanoid.MaxHealth) .. '%')
					end
				else
					if v.Character.Head:FindFirstChild('NameEsp'..Number) then
						v.Character.Head:FindFirstChild('NameEsp'..Number):Destroy()
					end
				end
			end
		end)
	end
end

------Upgrate--Auto Parry for me please----

local workspace = game:GetService("Workspace")
local players = game:GetService("Players")
local replicatedStorage = game:GetService("ReplicatedStorage")
local localPlayer = players.LocalPlayer
local BASE_THRESHOLD = 0.2
local VELOCITY_SCALING_FACTOR_FAST = 0.050
local VELOCITY_SCALING_FACTOR_SLOW = 0.1
local IMMEDIATE_PARRY_DISTANCE = 15
local IMMEDIATE_HIGH_VELOCITY_THRESHOLD = 85
local UserInputService = game:GetService("UserInputService")
local responses = {"By Home_40"}
local gameEndResponses = {"CBin Hub"}
local keywords = {"auto parry", "auto", "cheating", "hacking"}
local heartbeatConnection
local focusedBall, displayBall = nil, nil
local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
local ballsFolder = workspace:WaitForChild("Balls")
local parryButtonPress = replicatedStorage.Remotes.ParryButtonPress
local abilityButtonPress = replicatedStorage.Remotes.AbilityButtonPress
local sliderValue = 20
local distanceVisualizer = nil
local isRunning = false
local notifyparried = false
local PlayerGui = localPlayer:WaitForChild("PlayerGui")
local Hotbar = PlayerGui:WaitForChild("Hotbar")
local UseRage = false

local uigrad1 = Hotbar.Block.border1.UIGradient
local uigrad2 = Hotbar.Ability.border2.UIGradient


local function isPlayerOnMobile()
return UserInputService.TouchEnabled and not (UserInputService.KeyboardEnabled or UserInputService.GamepadEnabled)
end

local function chooseNewFocusedBall()
local balls = ballsFolder:GetChildren()
for _, ball in ipairs(balls) do
	if ball:GetAttribute("realBall") ~= nil and ball:GetAttribute("realBall") == true then
		focusedBall = ball
		break
	elseif ball:GetAttribute("target") ~= nil then
		focusedBall = ball
		break
	end
end

if focusedBall == nil then
	wait(1)
	chooseNewFocusedBall()
end
return focusedBall
end

local function getDynamicThreshold(ballVelocityMagnitude)
if ballVelocityMagnitude > 60 then
	return math.max(0.20, BASE_THRESHOLD - (ballVelocityMagnitude * VELOCITY_SCALING_FACTOR_FAST))
else
	return math.min(0.01, BASE_THRESHOLD + (ballVelocityMagnitude * VELOCITY_SCALING_FACTOR_SLOW))
end
end

local function timeUntilImpact(ballVelocity, distanceToPlayer, playerVelocity)
if not character then return end
local directionToPlayer = (character.HumanoidRootPart.Position - focusedBall.Position).Unit
local velocityTowardsPlayer = ballVelocity:Dot(directionToPlayer) - playerVelocity:Dot(directionToPlayer)

if velocityTowardsPlayer <= 0 then
	return math.huge
end

return (distanceToPlayer - sliderValue) / velocityTowardsPlayer
end

local function updateDistanceVisualizer()
local charPos = character and character.PrimaryPart and character.PrimaryPart.Position
if charPos and focusedBall then
	if distanceVisualizer then
		distanceVisualizer:Destroy()
	end

	local timeToImpactValue = timeUntilImpact(focusedBall.Velocity, (focusedBall.Position - charPos).Magnitude, character.PrimaryPart.Velocity)
	local ballFuturePosition = focusedBall.Position + focusedBall.Velocity * timeToImpactValue

	distanceVisualizer = Instance.new("Part")
	distanceVisualizer.Size = Vector3.new(5, 5, 5)
	distanceVisualizer.Anchored = true
	distanceVisualizer.Position = ballFuturePosition
	distanceVisualizer.Parent = workspace
end
end

local function checkIfTarget()
for _, v in pairs(ballsFolder:GetChildren()) do
	if v:IsA("Part") and v.BrickColor == BrickColor.new("Really red") then 
		return true 
	end 
end 
return false
end

local function isCooldownInEffect(uigradient)
return uigradient.Offset.Y < 0.1
end

local function checkBallDistance()
if not character or not checkIfTarget() then return end

local charPos = character.PrimaryPart.Position
local charVel = character.PrimaryPart.Velocity

if focusedBall and not focusedBall.Parent then
	chooseNewFocusedBall()
end
if not focusedBall then 
	chooseNewFocusedBall()
end

local ball = focusedBall
local distanceToPlayer = (ball.Position - charPos).Magnitude
local ballVelocityTowardsPlayer = ball.Velocity:Dot((charPos - ball.Position).Unit)

if distanceToPlayer < 15 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 16 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 17 then
	parryButtonPress:Fire()
elseif distanceToPlayer <18 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 19 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 20 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 20 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 21 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 22 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 23 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 24 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 25 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 26 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 27 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 28 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 29 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 30 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 31 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 32 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 33 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 34 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 35 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 36 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 37 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 38 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 39 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 40 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 41 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 42 then
		parryButtonPress:Fire()
elseif distanceToPlayer < 43 then
		parryButtonPress:Fire()
elseif distanceToPlayer < 44 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 45 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 46 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 47 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 48 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 49 then
	parryButtonPress:Fire()
elseif distanceToPlayer < 50 then
	parryButtonPress:Fire()
end

if timeUntilImpact(ball.Velocity, distanceToPlayer, charVel) < getDynamicThreshold(ballVelocityTowardsPlayer) then
	if (character.Abilities["Raging Deflection"].Enabled or character.Abilities["Rapture"].Enabled) and UseRage == true then
		if not isCooldownInEffect(uigrad2) then
			abilityButtonPress:Fire()
		end

		if isCooldownInEffect(uigrad2) and not isCooldownInEffect(uigrad1) then
			parryButtonPress:Fire()
			if notifyparried == true then
			end
		end

	elseif not isCooldownInEffect(uigrad1) then
		parryButtonPress:Fire()
		if notifyparried == true then
		end
		task.wait(0.1)
	end
end
end

local function autoParryCoroutine()
while isRunning do
	checkBallDistance()
	updateDistanceVisualizer()
	task.wait()
end
end

localPlayer.CharacterAdded:Connect(function(newCharacter)
character = newCharacter
chooseNewFocusedBall()
updateDistanceVisualizer()
end)

localPlayer.CharacterRemoving:Connect(function()
if distanceVisualizer then
	distanceVisualizer:Destroy()
	distanceVisualizer = nil
end
end)

function LargeBall()
for i,v in pairs(game.Workspace.Balls:GetChildren()) do
	v.Size = Vector3.new(20, 20, 20)
end
end

function SmallBall()
for i,v in pairs(game.Workspace.Balls:GetChildren()) do
	v.Size = Vector3.new(3, 3, 3)
end
end

local function startAutoParry()

chooseNewFocusedBall()

isRunning = true
local co = coroutine.create(autoParryCoroutine)
coroutine.resume(co)
end

local function stopAutoParry()
isRunning = false
end


-----End--------------------------

local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "Lunar X Hub", HidePremium = false,IntroText = "Lunar X Library", SaveConfig = true, ConfigFolder = "Lunar X Hub"})

---Tab------

local G = Window:MakeTab({
	Name = "General",
	PremiumOnly = false
})
----Text--------

local Section = G:AddSection({
	Name = "Menu :"
})

------Toggle-----------

G:AddToggle({
	Name = "Auto Parry[Legit]",
	Default = false,
	Callback = function(Value)
		if Value then
			startAutoParry()
		else
			stopAutoParry()
		end
	end
})

G:AddToggle({
	Name = "Teleport To Ball[Vjp]",
	Default = false,
	Callback = function(Value)
		_G.TeleportBall = Value
		StopTween(_G.TeleportBall)
	end
})
spawn(function()
	while wait() do
		if _G.TeleportBall then
			pcall(function()
	for i,v in pairs(game.Workspace.Balls:GetChildren()) do
		topos(v.CFrame * CFrame.new(0,-12,0))
			end
		end)
	end
end
end)

G:AddToggle({
	Name = "Auto Win[Vip]",
	Default = false,
	Callback = function(Value)
		if Value then
			startAutoParry()
		else
			stopAutoParry()
		end
		_G.TeleportBall = Value
		StopTween(_G.TeleportBall)
end})

G:AddToggle({
	Name = "Large Ball[Troll]",
	Default = false,
	Callback = function(Value)
		_G.Troll = Value
end})

spawn(function()
while wait() do
	if _G.Troll == true then
		LargeBall()
	else
		SmallBall()
	end
end
end)

G:AddToggle({
Name = "Auto Spam Dance[Legit]",
Default = false,
Callback = function(Value)
	_G.Spamdance = Value
end
})

spawn(function()
while wait() do
	pcall(function()
		if _G.Spamdance then
			game:GetService("VirtualInputManager"):SendKeyEvent(true,"R",false,game)
			wait(7.14)
			game:GetService("VirtualInputManager"):SendKeyEvent(false,"R",false,game)
		end
	end)
end
end)
G:AddSlider({
	Name = "Distance",
	Min = 0,
	Max = 100,
	Default = 15,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Distance",
	Callback = function(Value)
		spawn(function()
		sliderValue = Value
	end)
end})

---Text------

local Section = G:AddSection({
	Name = "Players :"
})
----Slider--------

G:AddSlider({
	Name = "WalkSpeed",
	Min = 36,
	Max = 200,
	Default = 36,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Speed",
	Callback = function(Value)
		spawn(function()
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
	end)
end})

---Text------

local Section = G:AddSection({
	Name = "ESP MENU"
})

------Toggle-----

G:AddToggle({
	Name = "ESP Players",
	Default = false,
	Callback = function(a)
		spawn(function()
			spawn(function()
		ESPPlayer = a
		UpdatePlayerChams()
			end)
		end)
	end    
})
end
